name: Deploy QA Hyster-yale-backend

on:
  release:
    types:
      - created

jobs:
  build-qa-image:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.release.target_commitish == 'qa-deploy'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/phoenix-software-development/hyster-yale-backend
          flavor: latest=true
          tags: |
            type=raw,value=qa-deploy-{{sha}}
      - name: Login to image repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VERSION_TAG=240404
            RELEASE_TAG=240404

  deploy:
    needs: [build-qa-image]
    runs-on: [self-hosted]
    permissions:
      packages: read
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/phoenix-software-development/hyster-yale-backend
          flavor: latest=true
          tags: |
            type=raw,value=qa-deploy-{{sha}}

      - name: Login to image repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Pull latest image
        shell: bash
        run: |
          # pull image
          docker pull ghcr.io/phoenix-software-development/hyster-yale-backend:latest

      - name: checkout code to get file compose.yml
        shell: bash
        run: |
          cd /opt/hysteryale/hyster-yale-backend
          get fetch
          git checkout tags/${{ github.event.release.tag_name }}

      - name: Stop old container is running
        shell: bash
        run: |
          cd /opt/hysteryale/hyster-yale-backend/docker
          docker compose down

      - name: Setup environment
        shell: bash
        run: |
          echo 'export CONTAINER_NAME=hysteryale-be-${{ github.event.release.tag_name }}' >> ~/.bashrc
          source ~/.bashrc
      - name: Run new Image
        shell: bash
        run: |
          cd /opt/hysteryale/hyster-yale-backend/docker
          docker compose up -d

      - name: Check successfully
        shell: bash
        run: |
          sleep 60
          cd /opt/hysteryale/hyster-yale-backend
          if [[ $(netstat -tuln | grep 8080) == "" ]]
          then
            echo 'Build Failure'
            docker logs $CONTAINER_NAME
          
            echo 'checkout last success tag'
            git checkout tags/$LAST_SUCCESS_RELEASE_TAG_BE
          
            cd docker/
            echo 'Down docker compose'
            docker compose down
          
            echo 'Up last success docker compose...'
            CONTAINER_NAME=$LAST_SUCCESS_VERSION_IMAGE_BE docker compose up -d
            echo 'Revert successfully.'
          
            exit 1
          fi
          
          echo 'Build successfully'
          echo "LAST_SUCCESS_VERSION_IMAGE_BE=$CONTAINER_NAME" >> ~/.bashrc
          echo "LAST_SUCCESS_RELEASE_TAG_BE=${{ github.event.release.tag_name }}" >> ~/.bashrc

      - name: Clean images and containers not used
        shell: bash
        run: |
          echo 'erasing not used container...'
          docker container prune 
          echo 'erased not used container.'
          
          echo 'erasing not used images...'
          docker image prune 
          echo 'erased not used images.'
          
          exit 0
          

